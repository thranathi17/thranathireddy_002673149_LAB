/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.MedicineCatalog;
import Model.Medicine;
import Model.Application;
import Model.Observation;
import Model.VitalSignHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author thran
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    private Application application;
    DefaultTableModel viewTableModel;
    Observation selectedObservation;
    
    
    
    ViewJPanel(Application application){
initComponents();

this.application = application;
this.viewTableModel= (DefaultTableModel) observationTable.getModel();


displayObservations();

}
    
    public void displayObservations(){
    VitalSignHistory history= this.application.getHistory();
    
    if(history.getVitalSignHistory().size()>0){
        viewTableModel.setRowCount(0);
    for(Observation o:history.getVitalSignHistory()){
        
        Object row[]= new Object[3];
     
        row[0] = o;
        row[1] = o.getTemperature();
        row[2] = o.getBloodPressure();
        
        viewTableModel.addRow(row);
        
     
    
    }
    }
    else{
    System.out.print("Empty List");}
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fieldObservationId = new javax.swing.JTextField();
        fieldTemperature1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fieldBloodPressure = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        observationTable = new javax.swing.JTable();
        viewObservationBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fieldObservationId.setText("jTextField2");
        fieldObservationId.setEnabled(false);
        jPanel1.add(fieldObservationId, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 74, -1, -1));
        jPanel1.add(fieldTemperature1, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 111, 60, -1));

        jLabel1.setText("id");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(89, 74, -1, -1));

        jLabel2.setText("temperature");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 114, -1, -1));
        jPanel1.add(fieldBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 148, 60, -1));

        jLabel3.setText("blood pressure");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 151, -1, -1));

        updateBtn.setText("update observation");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jTextField1.setText("VIEW AND UPDATE VITAL SIGN");
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 22, -1, -1));

        observationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Temperature", "BP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(observationTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 410, 190));

        viewObservationBtn.setText("VIEW DETAILS");
        viewObservationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewObservationBtnActionPerformed(evt);
            }
        });
        add(viewObservationBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 330, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void viewObservationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewObservationBtnActionPerformed
        // TODO add your handling code here:
        
        
        int selectedRow = observationTable.getSelectedRow();
        if(selectedRow>=0){
         this.selectedObservation= (Observation) observationTable.getValueAt(selectedRow, 0);
         
         fieldObservationId.setText(String.valueOf(this.selectedObservation.getObservationId()));
         fieldBloodPressure.setText(String.valueOf(this.selectedObservation.getBloodPressure()));
         fieldTemperature1.setText(String.valueOf(this.selectedObservation.getTemperature()));
         
        }else{
            JOptionPane.showMessageDialog(null,"please select a row");
        }
    }//GEN-LAST:event_viewObservationBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        
        if(!fieldObservationId.getText().isEmpty()){
        
        Observation o = this.application.getHistory().findObservation(Integer.valueOf(fieldObservationId.getText()));
        o.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
        o.setTemperature(Double.valueOf(fieldTemperature1.getText()));
        
        
        
        
        this.selectedObservation.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
        this.selectedObservation.setTemperature(Double.valueOf(fieldTemperature1.getText()));
        }
        else{
                JOptionPane.showMessageDialog(null,"you have not made any selction");
                }
        
        
        
    }//GEN-LAST:event_updateBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fieldBloodPressure;
    private javax.swing.JTextField fieldObservationId;
    private javax.swing.JTextField fieldTemperature1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable observationTable;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton viewObservationBtn;
    // End of variables declaration//GEN-END:variables
}
